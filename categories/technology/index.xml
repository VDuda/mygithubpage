<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on Vlad Duda</title>
    <link>https://vlad-duda.com/categories/technology/</link>
    <description>Recent content in Technology on Vlad Duda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="https://vlad-duda.com/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maker Time: The Key to High-Performing Software Teams</title>
      <link>https://vlad-duda.com/blog/maker-time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vlad-duda.com/blog/maker-time/</guid>
      <description>Time is the most important factor in creating high-performing software teams. Managers must carefully manage time, scope, and people to deliver successfully.
 Time: The total time the team spends on a problem. Scope: The functionality of the completed work. People: The number of people on the team and their skills.  What teams do with their time is the primary factor in determining their output. Even if you hire the best engineers, they will not succeed if they spend all their time on the wrong things or are constantly interrupted.</description>
    </item>
    
    <item>
      <title>Prompt Engineering Will Not Be Necessary in the Future</title>
      <link>https://vlad-duda.com/blog/prompt-engineering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vlad-duda.com/blog/prompt-engineering/</guid>
      <description>Prompting large language models (LLMs) is more of an art than a science, and it requires significant effort to develop useful prompts. However, prompt engineering is not a sustainable approach to querying LLMs, and it won&amp;rsquo;t be necessary in the future.
Current prompt engineering methods rely on concatenation or templating, but these have limitations for handling complex prompts and require structured data inputs and outputs for best use.
Prompt engineering today primarily relies on prompt concatenation or templating.</description>
    </item>
    
  </channel>
</rss>
